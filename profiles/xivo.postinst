#/bin/bash

# set cdrom as apt source
cp /etc/apt/sources.list /etc/apt/sources.list.bkp
echo -e "\n" |apt-cdrom add

# add wazo keys
apt-key add /media/cdrom/simple-cdd/wazo_current.key

# install wazo packages
echo 'APT::Install-Recommends "false";' >> /etc/apt/apt.conf.d/91tmp;
echo -e "\033[91m* Installing Wazo packages\033[0m"
export KERN_REL=$(ls /lib/modules/ | sort | head -n 1)

apt-get update
apt-get install -yq dahdi-linux-modules-${KERN_REL}
apt-get install -yq x11-common
apt-get install -yq -o Dpkg::Options::="--force-confold" xivo xivo-dist

# restore apt configuration
mv /etc/apt/sources.list.bkp /etc/apt/sources.list
apt-get update

# set machine hostname
echo "wazo" > /etc/hostname
sed -i '2 a\127.0.0.1\twazo' /etc/hosts

cat > /etc/rc.xivo << EOF
#!/bin/sh
debconf-set-selections <<EOF_DEBCONF
wazo-auth wazo-auth/db-skip boolean false
EOF_DEBCONF

/usr/sbin/dpkg-reconfigure mongooseim --frontend noninteractive
/usr/sbin/dpkg-reconfigure wazo-webhookd --frontend noninteractive
/usr/sbin/dpkg-reconfigure xivo-manage-db --frontend noninteractive
/usr/sbin/dpkg-reconfigure wazo-dird --frontend noninteractive
/usr/sbin/dpkg-reconfigure wazo-auth --frontend noninteractive

# Restart services in order to use the new XIVO_UUID set up by xivo-manage-db
/bin/systemctl restart wazo-auth.service
/bin/systemctl restart xivo-confd.service
/bin/systemctl restart wazo-dird.service
EOF
chmod +x /etc/rc.xivo

# reconfigure xivo-manage-db when postgres is running
cat > /etc/rc.local << EOF
#!/bin/sh
/etc/rc.xivo && rm -f /etc/rc.xivo && sed -i "/rc.xivo/d" /etc/rc.local
exit 0
EOF
chmod a+x /etc/rc.local

rm /etc/apt/apt.conf.d/91tmp

# dahdi configuration
invoke-rc.d dahdi restart
dahdi_genconf
CONFIG="/etc/asterisk/dahdi-channels.conf"
if [ -e "${CONFIG}" ]; then
    chown asterisk:www-data ${CONFIG}
    chmod 660 ${CONFIG}
fi
